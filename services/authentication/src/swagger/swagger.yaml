openapi: 3.0.0
info:
  title: Example API
  description: This is an example API
  version: 1.0.0
servers:
  - url: http://localhost:8080/  # TODO: Make it dynamic
paths:
  /register:
    post:
      summary: Register
      description: Register a new user
      requestBody:
        description: JSON object with the user data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address
                username:
                  type: string
                  description: The username
                password:
                  type: string
                  description: The password
      responses:
        "201":
          description: JSON object with the user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message of successful registration
                  token:
                    type: string
                    description: The generated JWT token for further authentication
                  role:
                    type: string
                    description: The role of the user
        "500":
          description: JSON object with the error message due to internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
  /login:
    post:
      summary: Login
      description: Login a user
      requestBody:
        description: JSON object with the user data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address
                username:
                  type: string
                  description: The username
                password:
                  type: string
                  description: The password
      responses:
        "200":
          description: JSON object with the user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The generated JWT token for further authentication
                  role:
                    type: string
                    description: The role of the user
        "401":
          description: JSON object with the error message due to unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
        "500":
          description: JSON object with the error message due to internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
  /user:
    post:
      summary: Check user's eligibility based on the JWT token
      description: Check user's eligibility based on the JWT token
      requestBody:
        description: JSON object with the user data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The JWT token provided by the user
      responses:
        "200":
          description: JSON object with the user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasRemainingQuota:
                    type: boolean
                    description: Boolean indicating if the user has remaining quota to use the backend API
                  newToken:
                    type: string
                    description: The new JWT token for authentication
        "401":
          description: JSON object with the error message due to unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message                
        "500":
          description: JSON object with the error message due to internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
  /role:
    post:
      summary: Check user's role based on the JWT token
      description: Check user's role based on the JWT token
      requestBody:
        description: JSON object with the user data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The JWT token provided by the client
      responses:
        "200":
          description: JSON object with the user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                    description: The role of the user
                  newToken:
                    type: string
                    description: The new JWT token for authentication
        "500":
          description: JSON object with the error message due to internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
  /record:
    post:
      summary: Record the usage of API services
      description: Record the usage of API services
      requestBody:
        description: JSON object with the user data
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token of user
                  endpoint:
                    type: string
                    description: The endpoint of the API
                    example: /news
                  method:
                    type: string
                    description: The method of the API
                    example: POST
                  timestamp:
                    type: number
                    description: The timestamp of the API call in epoch time
                    example: 1701216146000
      responses:
        "201":
          description: JSON object with the success message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message of successful recording
        "500":
          description: JSON object with the error message due to internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message